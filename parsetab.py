
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ARG END PIPE SEMICOLONprogram : statementscommand : command ARGcommand : ARGstatement : commandcommand : command PIPE command\n    separator : SEMICOLON\n              | END\n              | separator END\n              | separator SEMICOLON\n    \n    statements : statement\n    \n    statements : statements separator statement\n    '
    
_lr_action_items = {'ARG':([0,4,5,6,7,8,9,10,12,13,14,],[5,9,-3,5,-6,-7,-2,5,-8,-9,9,]),'$end':([1,2,3,4,5,9,11,14,],[0,-1,-10,-4,-3,-2,-11,-5,]),'SEMICOLON':([2,3,4,5,6,7,8,9,11,12,13,14,],[7,-10,-4,-3,13,-6,-7,-2,-11,-8,-9,-5,]),'END':([2,3,4,5,6,7,8,9,11,12,13,14,],[8,-10,-4,-3,12,-6,-7,-2,-11,-8,-9,-5,]),'PIPE':([4,5,9,14,],[10,-3,-2,10,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,],[1,]),'statements':([0,],[2,]),'statement':([0,6,],[3,11,]),'command':([0,6,10,],[4,4,14,]),'separator':([2,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> statements','program',1,'p_program','bash.py',19),
  ('command -> command ARG','command',2,'p_funcname2','bash.py',57),
  ('command -> ARG','command',1,'p_funcname','bash.py',61),
  ('statement -> command','statement',1,'p_statement','bash.py',66),
  ('command -> command PIPE command','command',3,'p_statement_pipe','bash.py',70),
  ('separator -> SEMICOLON','separator',1,'p_separator','bash.py',75),
  ('separator -> END','separator',1,'p_separator','bash.py',76),
  ('separator -> separator END','separator',2,'p_separator','bash.py',77),
  ('separator -> separator SEMICOLON','separator',2,'p_separator','bash.py',78),
  ('statements -> statement','statements',1,'p_statements','bash.py',83),
  ('statements -> statements separator statement','statements',3,'p_statements_multiple','bash.py',89),
]
